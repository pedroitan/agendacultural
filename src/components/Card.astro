---
/**
 * Card Component
 * @description Reusable card component for displaying linked content
 * @component
 */

/**
 * Card component properties
 * @interface Props
 * @property {string} title - The card title
 * @property {string} body - The card content text
 * @property {string} href - The URL the card links to
 */
interface Props {
	title: string;
	body: string;
	href: string;
}

const { href, title, body } = Astro.props;
---

<li class="link-card">
  <!-- 
    Card container styling:
    - list-style: none: Removes default list styling
    - display: flex: Enables flex layout
    - padding: 1px: Creates space for hover effect
    - background-color: Base dark background
    - border-radius: 7px: Rounded corners
    - transition: Smooth background animation
    - box-shadow: Subtle inset border
  -->
	<a href={href}>
  <!-- 
    Link styling:
    - width: 100%: Full width container
    - text-decoration: none: Removes underline
    - padding: Inner spacing
    - border-radius: 8px: Rounded corners
    - color: white: Text color
    - background-color: Dark background
    - opacity: 0.8: Slightly transparent
  -->
		<h2>
			{title}
			<span>&rarr;</span>
		</h2>
		<p>
			{body}
		</p>
	</a>
</li>
<style>
/**
 * Card component styles
 * @description Provides hover effects and responsive styling
 * - Gradient background animation on hover
 * - Smooth transitions for interactive elements
 * - Accessible focus states
 * - Responsive typography and spacing
 */
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
